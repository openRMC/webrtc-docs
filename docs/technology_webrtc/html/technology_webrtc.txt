image::tssg_logo.png["TSSG Logo", scaledwidth="15%", scaledheight="15%", align="center"]

[float]
WebRTC Technology
-----------------

.Research Group:
Telecommunications Software and Systems Group (TSSG)

.Address:
Waterford Institute of Technology, West Campus, Carriganore, Waterford, Ireland

.Author(s):
Brendan O'Farrell

.Email List:
bofarrell@tssg.org

.Rev Date:
July 03, 2012

.Rev Number:
N/A

.Date:
July 03, 2012

.Copyright:
(C) Waterford Institute of Technology

[float]
Synopsis:
^^^^^^^^^
The technolgy involved in WebRTc

:reporttype:    Research Note TSSG-2012
:reporttitle:   WebRTC Technology
:author:        Brendan O'Farrell
:email:         bofarrell@tssg.org
:group:         Telecommunications Software and Systems Group (TSSG)
:address:       Waterford Institute of Technology, West Campus, Carriganore, Waterford, Ireland
:revdate:       July 03, 2012
:revnumber:     N/A
:docdate:       July 03, 2012
:description:   The technolgy involved in WebRTc
:legal:         (C) Waterford Institute of Technology
:encoding:      iso-8859-1
:toc:



== Technology ==
 
There are a number of elements are required for a client with real time communication, a media engine, an interface and a framework. See figure 1.

 

image::http://git.lab.tssg.org/webrtc/master/tree/docs/media-engine-image.pdf-pages.jpg


.REAL TIME COMMUNICATION INTERNAL DIAGRAM 
image::http://git.lab.tssg.org/webrtc/master/tree/docs/media-engine-image.pdf-pages.jpg["Internal diagram", scaledwidth="75%", scaledheight="75%"]


The large grey area houses the communications /collaboration GUI, this is the visual interface. The visual interface can be a hard interface such as a tablet screen, phone keypad, pc or any other device. The media engine is housed in the blue area and its main  function is that it manages the real time transmission and receipt of a video/audio stream, the rest of the diagram contains the framework. 


=== LIST OF MEDIA ENGINE FUNCTIONS ===

Here are the set of functions which enable the media engine to deliver and receive high quality sound and vision.

Audio

Setup and control the hardware 
RTP, compression, encryption, statistics, etc. 
Produce low-latency audio from microphone 
Conceal loss, de-jitter and play audio from the network 
Cancel echo, VAD, reduce noise, etc. 
Manage codecs 		

Video

Render video, capture camera input 
Video processing (blue screen, gamma, etc.) 
Conceal loss, de-jitter and play video from the network 
Cancel echo, VAD, reduce noise, etc. 
Manage codecs 
Bandwidth Management 









The main aim of WebRTC is to combine the media engine and a set of standard APIs with the result being a browser capable of real time communication. In figure 2 you can see the.

=== INTERNAL WORKINGS OF A MEDIA ENGINE (Diagram). ===



The WebRTC Media Engine uses both a set of standard components, including codecs to minimize the issues of two WebRTC end points communicating, It also includes a set of standard APIs so a server that the browser connects to can control the WebRTC Media Engine in the client. Beyond the basic media functions, WebRTC includes an API set that enables the controlling server software to cause a direct connection between two WebRTC devices without any other external signalling. By merely telling two WebRTC devices to communicate, the server can initiate an IP based voice or video communications. http://www.pkeconsulting.com/pkewebrtc.pdf[PKE Consulting]


CODE  SAMPLES
http://www.webrtc.org/reference/native-apis [WebRTC native API's]
http://www.webrtc.org/reference/api-description   [PeerConnection native APIâ€™s]
https://code.google.com/p/libjingle/source/browse/#svn%2Ftrunk%2Ftalk%2Fexamples%2Fpeerconnection%2Fclient [Sample client application
